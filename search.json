[{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"gnu-general-public-license","dir":"","previous_headings":"","what":"GNU GENERAL PUBLIC LICENSE","title":"NA","text":"Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"NA","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"NA","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"NA","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"NA","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"NA","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"NA","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"NA","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"NA","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"NA","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"NA","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"NA","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"NA","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"NA","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"NA","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License.","title":"NA","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"NA","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"NA","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"NA","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"NA","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://sbohvm.github.io/RPiR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"NA","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands `show w’ `show c’ show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see https://www.gnu.org/licenses/. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read https://www.gnu.org/licenses/--lgpl.html.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author>     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.     This is free software, and you are welcome to redistribute it     under certain conditions; type `show c' for details."},{"path":[]},{"path":"https://sbohvm.github.io/RPiR/articles/faq.html","id":"run-a-practical","dir":"Articles","previous_headings":"How to use this package","what":"Run a practical","title":"Frequently Asked Questions","text":"first need load learnr package, use run_tutorial() select practical wish run: Practical exercise 1-6 onwards, suggest open separate instance RStudio run code.","code":"library(learnr) run_tutorial(\"practical1-1\", package = \"RPiR\")"},{"path":"https://sbohvm.github.io/RPiR/articles/faq.html","id":"reset-a-practical","dir":"Articles","previous_headings":"How to use this package","what":"Reset a practical","title":"Frequently Asked Questions","text":"Click Start link (look tiny grey text left menu).","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/faq.html","id":"close-a-practical","dir":"Articles","previous_headings":"How to use this package","what":"Close a practical","title":"Frequently Asked Questions","text":"Close window, click red STOP button RStudio end process.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/debugging.html","id":"dont-ignore-warnings","dir":"Articles > Pages","previous_headings":"","what":"Don’t ignore warnings!","title":"Debugging","text":"People often put statements code reduce number warnings generates make look prettier. always terrible idea, new warnings introduced mistake, won’t see (suppressed !), please don’t following: anything else like . never mark generating warning messages code (unless real warnings real problems code course!).","code":"suppressWarnings() suppressPackageStartupMessages() library(dplyr, warn.conflicts = FALSE)"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/debugging.html","id":"restart-r-and-never-save--rdata-files","dir":"Articles > Pages","previous_headings":"","what":"Restart R and never save .RData files","title":"Debugging","text":"Errors can often transitory something weird current environment, ’s great ’s just worth worrying much , ’s always worth restarting R trying panic try debugging problem, can take . However, save restore .RData files, restart R won’t delete mistakes made last R session - objects present last session still restarting - code longer reproducible. result strongly encourage never save restore files. disable , open (global) preferences RStudio, untick “Restore .RData workspace startup” set “Save workspace .RData exit:” “Never”.  ’ve ignoring error messages, ’ve tried restarting R hasn’t helped, need try debugging code real, ’re afraid. ’s approach try:","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/debugging.html","id":"watch-the-video-on-debugging","dir":"Articles > Pages","previous_headings":"","what":"Watch the video on debugging","title":"Debugging","text":"good time watch keynote rstudio::conf 2020 Jenny Bryan. excellent keynote errors R identify fix .","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/debugging.html","id":"level-1---check-for-typos","dir":"Articles > Pages","previous_headings":"","what":"Level 1 - Check for typos","title":"Debugging","text":"Read error warning message carefully try decipher . seen ? recognizable function object names might give clue causing error? spelling mistakes code might causing problem? Check names functions, arguments, objects. function transform object neither created earlier function passed argument? mismatching brackets, missing commas, strange symbols shouldn’t ? tried internet search? ’re lucky, someone else might similar problem posted Stack Overflow.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/debugging.html","id":"level-2---tracking-the-error","dir":"Articles > Pages","previous_headings":"","what":"Level 2 - Tracking the error","title":"Debugging","text":"problem immediately obvious error statement search typos, try running code line line, inserting print() statements. code / function short, can helpful run code line line, viewing constructed objects go confirming match expected. can done highlighting individual objects lines code pressing Command + Enter Mac (Ctrl + Enter Windows). code complex – number functions call example – running code line line might confusing. case might want try inserting print() str() statements key points code. especially useful idea error occurring! can done calling traceback() immediately error occurs. function prints list functions (calls) lead error triggered. list called call stack (stack trace).","code":"a <- function(x) x + y b <- function(x) a(x)  b(2) ## Error in a(x): object 'y' not found traceback() ## No traceback available"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/debugging.html","id":"level-3---browsing-the-error","dir":"Articles > Pages","previous_headings":"","what":"Level 3 - Browsing the error","title":"Debugging","text":"sfsdf","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/debugging.html","id":"examples","dir":"Articles > Pages","previous_headings":"","what":"Examples","title":"Debugging","text":"problem, try copying code instance RStudio work . Accompanying solutions provided separate tab.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/debugging.html","id":"error-could-not-find-function","dir":"Articles > Pages","previous_headings":"Examples","what":"Error: could not find function","title":"Debugging","text":"Problem Hints Solution Define calculate() function, calls add2() multiplyby8() perform following calculation: \\[y = 8(x + 2)\\] problem, R couldn’t find function multiplby8(): function calculate() calls add2(), calls multiplby8(), doesn’t exist!","code":"multiplyby8 <- function(value) {   value * 8 }  add2 <- function(value) {   result <- value + 2   multiplby8(result) }  calculate <- function(value) {   add2(value) }  calculate(2) ## Error in multiplby8(result): could not find function \"multiplby8\" ## Error in multiplby8(result): could not find function \"multiplby8\" multiplyby8 <- function(value) {   value * 8 }  add2 <- function(value) {   result <- value + 2   multiplyby8(result)   # fix the typo here! }  calculate <- function(value) {   add2(value) }  calculate(2) ## [1] 32"},{"path":[]},{"path":"https://sbohvm.github.io/RPiR/articles/pages/debugging.html","id":"error-unexpected-in","dir":"Articles > Pages","previous_headings":"Examples","what":"Error: Unexpected ‘}’ in","title":"Debugging","text":"Problem Hints Solution cats() function determines cat vocalisations based age. many brackets . ’s easier see opening closing brackets match highlighting lines (pressing Command + Mac / Ctrl + Windows), using Reindent Lines shortcut (menu bar, select Code, Reindent Lines; pressing Command + Mac / Ctrl + Windows). two extra curly brackets lines 10 12. make code easier read, even curly brackets can removed. Since contents loop contents else statement comprise single line.","code":"cats <- data.frame(name = c(\"Cady\", \"Kitten\", \"Cleo\"),                    age = c(15, 14, 3))  for (i in 1:3) {      cat <- cats[i, ]      if (cat$age > 10) {          for (j in seq_len(cat$age)) {       meows <- rep(\"Meeooooww!\", cat$age)     }        }      msg <- paste(cat$name, \"Meeooooww!\")   }       } else {         msg <- paste(cat$name, \"Pew! Pew!\")    }    print(msg)  } ## Error: <text>:18:2: unexpected '}' ## 17:      ## 18:  } ##      ^ ## Error: <text>:18:2: unexpected '}' ## 17:      ## 18:  } ##      ^ cats <- data.frame(name = c(\"Cady\", \"Kitten\", \"Cleo\"),                    age = c(15, 14, 3))  for (i in 1:3) {      cat <- cats[i, ]      if (cat$age > 10) {          for (j in seq_len(cat$age))        meows <- rep(\"Meeooooww!\", cat$age)          msg <- paste(cat$name, \"Meeooooww!\")        } else      msg <- paste(cat$name, \"Pew! Pew!\")      print(msg)    } ## [1] \"Cady Meeooooww!\" ## [1] \"Kitten Meeooooww!\" ## [1] \"Cleo Pew! Pew!\""},{"path":[]},{"path":"https://sbohvm.github.io/RPiR/articles/pages/debugging.html","id":"error-unexpected-in-1","dir":"Articles > Pages","previous_headings":"Examples","what":"Error: unexpected ‘=’ in","title":"Debugging","text":"Problem Hints Solution Define countdown() function, counts number printing “Blast !” console. error stated, R found unexpected =: , code stops hitting first error. ’s way website generated. RStudio, number unexpected '}' ... errors follow . number errors might seem intimidating, important thing note fix first one, remaining three cease occur. ’s important, therefore, tackle errors sequence. , returning unexpected =… = can found line 19. Now, recall statements always followed condition. , conditional test results TRUE FALSE.","code":"countdown <- function(number) {      if (number < 0) {          stop(\"Can't countdown from a negative time.\")        } else {          timestep <- number          for (i in 1:number) {       print(timestep)       timestep <- timestep - 1       Sys.sleep(1)              if (timestep = 0)          print(\"Blast off!\")     }        }    }  countdown(3) ## Error: <text>:16:20: unexpected '=' ## 15:        ## 16:       if (timestep = ##                        ^ ## Error: <text>:16:20: unexpected '=' ## 15:        ## 16:       if (timestep = ##                        ^ countdown <- function(number) {      if (number < 0) {          stop(\"Can't countdown from a negative time.\")        } else {          timestep <- number          for (i in 1:number) {       print(timestep)       timestep <- timestep - 1       Sys.sleep(1)              if (timestep == 0)   # fix conditional test         print(\"Blast off!\")     }        }    }  countdown(3) ## [1] 3 ## [1] 2 ## [1] 1 ## [1] \"Blast off!\""},{"path":[]},{"path":"https://sbohvm.github.io/RPiR/articles/pages/debugging.html","id":"error-object-not-found","dir":"Articles > Pages","previous_headings":"Examples","what":"Error: object not found","title":"Debugging","text":"Problem Hints Solution Given acceleration point rest time travel, calculate displacement object using Newton’s second equation motion: \\[s = ut + \\frac{1}{2}^2\\] , error generated line 3 R tries multiply initial_velocity time, can’t find initial_velocity object: object defined earlier function, must passed argument. can’t just magically appear thin air!","code":"displacement <- function(acceleration, time) {   starting_speed <- 0   initial_velocity * time + (0.5 * acceleration * (time ^ 2)) }  displacement(10, 18) ## Error in displacement(10, 18): object 'initial_velocity' not found ## Error in displacement(10, 18): object 'initial_velocity' not found displacement <- function(acceleration, time) {   initial_velocity <- 0   # initialise the object here!   initial_velocity * time + (0.5 * acceleration * (time ^ 2)) }  displacement(10, 18) ## [1] 1620"},{"path":[]},{"path":"https://sbohvm.github.io/RPiR/articles/pages/debugging.html","id":"error-missing-value-where-truefalse-needed","dir":"Articles > Pages","previous_headings":"Examples","what":"Error: missing value where TRUE/FALSE needed","title":"Debugging","text":"Problem Hints Solution checker() function checks whether number big (greater 10) small (less equal 10) prints descriptive statement console. , R returning error third iteration loop: error (value > 10) TRUE/FALSE value expected. case, checker() trying determine whether value, NA, greater 10. Since NA > 10 returns NA else statements accept boolean values, error generated. solution either remove NA items vector check non-numeric values function.","code":"checker <- function(value) {      if (value > 10) {          print(\"Big number\")        } else {          print(\"Small number\")        }    }  items <- list(2, 8, NA, 32)  for (i in items) {      checker(i)  } ## [1] \"Small number\" ## [1] \"Small number\" ## Error in if (value > 10) {: missing value where TRUE/FALSE needed ## [1] \"Small number\" ## [1] \"Small number\" ## Error in if (value > 10) {: missing value where TRUE/FALSE needed checker <- function(value) {      if (!is.numeric(value)) {   # check for          print(\"Not a number\")     # non-numeric        } else if (value > 10) {    # values here!          print(\"Big number\")        } else {          print(\"Small number\")        }    }  items <- list(2, 8, NA, 32)  for (i in items) {      checker(i)  } ## [1] \"Small number\" ## [1] \"Small number\" ## [1] \"Not a number\" ## [1] \"Big number\""},{"path":[]},{"path":"https://sbohvm.github.io/RPiR/articles/pages/debugging.html","id":"warning-the-condition-has-length-1-and-only-the-first-element-will-be-used","dir":"Articles > Pages","previous_headings":"Examples","what":"Warning: the condition has length > 1 and only the first element will be used","title":"Debugging","text":"Problem Hints Solution function explode() takes number 0 11, otherwise NA returned. Values 0 10 incremented 1, whereas 11 reset 0. warning triggered (value > 11). case, ’s particularly dangerous Warning doesn’t stop code like Error , , erroneous values returned! warnings triggered lines 3 7, vector (five element vector) passed explode() value argument. problem condition ((condition)) must length 1 therefore first element vector used comparison. , value input c(2, 4, 11, 27, 15), condition value > 11 tests 2, returning FALSE. condition value == 11 tests 2, returning FALSE. output <- value + 1 returns c(3, 5, 12, 28, 16). solution either (1) ensure function can take single input value; (2) wrap else statements loop, element vector can checked transformed individually. former:","code":"explode <- function(value) {      if (value > 11) {          output <- NA        } else if (value == 11) {          output <- 0        } else {          output <- value + 1      }      output }  vector <- c(2, 4, 11, 27, 15) explode(vector) ## Error in if (value > 11) {: the condition has length > 1 ## Error in if (value > 11) {: the condition has length > 1 explode <- function(value) {      if (length(value) > 1)                   # add a check     stop(\"Input must be a single value\")   # here      if (value > 11) {          output <- NA        } else if (value == 11) {          output <- 0        } else {          output <- value + 1      }      output }  vector <- c(2, 4, 11, 27, 15)  for (i in vector) {                        # and loop      explode(i)                               # through the    }                                          # vector here"},{"path":[]},{"path":"https://sbohvm.github.io/RPiR/articles/pages/debugging.html","id":"error-unexpected-symbol-in","dir":"Articles > Pages","previous_headings":"Examples","what":"Error: unexpected symbol in","title":"Debugging","text":"Problem Hints Solution quadratic() function used solve quadratic equations. unexpected symbol can often avoided keeping good code hygiene making sure everything neat tidy. good way make good use white space (blank lines sections code) well making habit selecting code (Command + Mac / Ctrl + Windows), reindenting lines (Command + Mac / Ctrl + Windows). case, won’t help error occurs single line. 4 syntax errors – errors grammar code – total, see can find .","code":"quadratic <- function(a, b, c) {      root <- sqrt(b^2 - 4ac)   solution1 <- -b + root / 2a   solution2 <- -b - root / 2a   list(solution1 solution2)    }  quadratic(1, -5, 6) ## Error: <text>:3:23: unexpected symbol ## 2:    ## 3:   root <- sqrt(b^2 - 4ac ##                          ^ ## Error: <text>:3:23: unexpected symbol ## 2:    ## 3:   root <- sqrt(b^2 - 4ac ##                          ^ quadratic <- function(a, b, c) {      root <- sqrt(b^2 - 4 * a * c)    # here,   solution1 <- -b + root / 2 * a   # here,   solution2 <- -b - root / 2 * a   # here,   list(solution1, solution2)       # and here!    }  quadratic(1, -5, 6) ## [[1]] ## [1] 5.5 ##  ## [[2]] ## [1] 4.5"},{"path":[]},{"path":"https://sbohvm.github.io/RPiR/articles/pages/debugging.html","id":"error-replacement-has-data-has","dir":"Articles > Pages","previous_headings":"Examples","what":"Error: replacement has, data has","title":"Debugging","text":"Problem Hints Solution functions . wish add new column dataframe. error little difficult read: key point note replacement 5 rows data 6… replacement time.","code":"data <- data.frame(colour = c(\"teal\", \"mustard yellow\", \"leaf green\", \"dark\",                               \"candyfloss pink\", \"quite a nice brown\"),                     number = c(3328476, 9832, 23992611, 213987, 487621, 6328974))  data$time <- seq(0, 9, 2) ## Error in `$<-.data.frame`(`*tmp*`, time, value = c(0, 2, 4, 6, 8)): replacement has 5 rows, data has 6 ## Error in `$<-.data.frame`(`*tmp*`, time, value = c(0, 2, 4, 6, 8)): replacement has 5 rows, data has 6 data <- data.frame(colour = c(\"teal\", \"mustard yellow\", \"leaf green\", \"dark\",                               \"candyfloss pink\", \"quite a nice brown\"),                     number = c(3328476, 9832, 23992611, 213987, 487621, 6328974))  data$time <- seq(0, 9, 1.67)"},{"path":[]},{"path":"https://sbohvm.github.io/RPiR/articles/pages/debugging.html","id":"error-object-of-type-closure-is-not-subsettable","dir":"Articles > Pages","previous_headings":"Examples","what":"Error: object of type ‘closure’ is not subsettable","title":"Debugging","text":"Problem Hints Solution force() function calculates Newton’s second law motion. tricky one might require internet search (Stack Overflow) solve. Reading error message, know error triggered line 11 mean[] <- force(dat$mass[], dat$acceleration[]): problem “object type ‘closure’ subsettable”. mean?","code":"force <- function(mass, acceleration) {      mass * acceleration    }  dat <- data.frame(mass = c(20, 23, 27), acceleration = c(30, 40, 62))  for (i in seq_len(nrow(dat))) {      mean[i] <- force(dat$mass[i], dat$acceleration[i])    } ## Error in mean[i] <- force(dat$mass[i], dat$acceleration[i]): object of type 'closure' is not subsettable mean ## function (x, ...)  ## UseMethod(\"mean\") ## <bytecode: 0x7fcc0db8ec78> ## <environment: namespace:base> ## Error in mean[i] <- force(dat$mass[i], dat$acceleration[i]): object of type 'closure' is not subsettable ## function (x, ...)  ## UseMethod(\"mean\") ## <bytecode: 0x7fcc0db8ec78> ## <environment: namespace:base> force <- function(mass, acceleration) {      mass * acceleration    }  dat <- data.frame(mass = c(20, 23, 27), acceleration = c(30, 40, 62))  results <- c()   # define results object first and don't give an object                  # the same name as a function!  for (i in seq_len(nrow(dat))) {      results[i] <- force(dat$mass[i], dat$acceleration[i])    }  results ## [1]  600  920 1674"},{"path":[]},{"path":"https://sbohvm.github.io/RPiR/articles/pages/devtools.html","id":"is-your-package-is-ready-to-use","dir":"Articles > Pages","previous_headings":"","what":"Is your package is ready to use?","title":"document(), install(), and library()","text":"lots specific rules around run specific commands ’re editing package. simplest one follow just everything – bit time consuming, ’s simpler! First restart R, : ’re sure ’s working, stage commit changes push github.","code":"devtools::document() devtools::install() library(packagename)"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/devtools.html","id":"details-of-when-to-run-what","dir":"Articles > Pages","previous_headings":"","what":"Details of when to run what…","title":"document(), install(), and library()","text":"want know specific details actually need run individual commands though, …","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/devtools.html","id":"when-to-devtoolsdocument","dir":"Articles > Pages","previous_headings":"Details of when to run what…","what":"When to devtools::document()?","title":"document(), install(), and library()","text":"call devtools::document() : Edit function’s documentation block (edits file man directory) Write new function documentation block (generates file man directory) Note : call ?function help file generated files man directory, changes installed loaded R. Edit packagename-package.R file (generates package documentation, called via ?packagename installing loading R) Write new function (add name function NAMESPACE file) Note : NAMESPACE file lists functions included package install well external package dependencies. Change name function (replace name function NAMESPACE file)","code":"#' title #'  #' @param argument description #'"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/devtools.html","id":"when-to-devtoolsinstall","dir":"Articles > Pages","previous_headings":"Details of when to run what…","what":"When to devtools::install()?","title":"document(), install(), and library()","text":"devtools::install install changes package (edits functions, edits demos, changes NAMESPACE, files man directory) instance R.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/devtools.html","id":"when-to-library","dir":"Articles > Pages","previous_headings":"Details of when to run what…","what":"When to library()?","title":"document(), install(), and library()","text":"library() load version package currently installed instance R (doesn’t matter whether ’ve installed via devtools::install, devtools::install_github(), install.packages()). need restart R calling library though, stuck old version package.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/flow.html","id":"comparisons-testing-for-equality-and-difference","dir":"Articles > Pages","previous_headings":"","what":"Comparisons – testing for equality and difference","title":"Flow control","text":"tests essential loops, forms flow control statements. allow us test whether something true, change lines code run depending outcome. basic tests: == b: equal b? (TRUE true, FALSE false) > b: greater b? < b: less b? >= b: greater equal b? <= b: less equal b? != b: different b? three basic ways changing combining : (< b) || (c == d): either  less b c equal d? (< b) && (c == d): less b c equal d? !((< b) && (c == d)): TRUE? TRUE FALSE vice versa Remember use (lots !) brackets ensure combining things right order. tests can used loops determine whether continue next iteration loop, statements , determine next. introduced concepts Lecture 7a. Comparisons also covered passing R4DS, R Coder bit depth .","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/flow.html","id":"if-something-and-if-something-----else-----statements","dir":"Articles > Pages","previous_headings":"","what":"if (something) and if (something) { ... } else { ... } statements","title":"Flow control","text":"command allow us perform test, result TRUE run block R code (curly brackets { ... }). Optionally, test FALSE, different block code can run instead. allows us variety things. give simple example: prints \"Maths works!\" test TRUE, code block follows run. Whereas: prints \"Less 5.\" test false, R continues code block else statement. else statement, code run, : nothing. use ... else statements throughout helper functions example code ’ve provided . instance: checks whether length(findGlobals(plot_simple, merge=FALSE)$variables) non-zero, say whether variables element returned findGlobals(plot_simple, merge = FALSE) length zero, .e. whether global variables function plot_simple. , contents curly brackets run, stop(...) called, code stops running. fact, plot_simple global variables, code block run. Practical 3-4 provide second example statement, used control code execution: code tests whether variable first.graph TRUE. , following code block run, plots graph new graphics window sets first.graph FALSE. practical, code run inside loop, next (every subsequent) time runs, first.graph already FALSE code block following else statement run, plot superimposed existing graphics window. introduced concepts Lecture 5b. R Coder covers basics statements . R4DS seems consider simple, ironically chapter Advanced R; however, contains lot advanced topics flow control well beyond scope course.","code":"if (2 > 1) {   print(\"Maths works!\") } #> [1] \"Maths works!\" if (2 >= 5) {   print(\"At least 5.\") } else {   print(\"Less than 5.\") } #> [1] \"Less than 5.\" if (2 >= 5) {   print(\"At least 5.\") } library(codetools) library(RPiR)  if (length(findGlobals(plot_simple, merge = FALSE)$variables) != 0) {   stop(\"Function plot_simple() may not use global variable(s): \",        findGlobals(plot_simple, merge = FALSE)$variables) } if (first.graph) {   plot_populations(final.populations,                    new.graph = TRUE,                     col = c(susceptibles = \"green\", infecteds = \"red\"))   first.graph <- FALSE  } else {   plot_populations(final.populations,                    new.graph = FALSE,                    col = c(susceptibles = \"green\", infecteds = \"red\")) }"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/install_RPiR.html","id":"instructions","dir":"Articles > Pages","previous_headings":"","what":"Instructions","title":"Course preparation - RPiR","text":"First, make sure devtools package installed calling library(devtools). doesn’t work, install : RPiR package hosted github, need use install_github (devtools package): see something like : press 1.. ’re asked: say . worked, able load RPiR package typing:","code":"install.packages(\"devtools\") library(devtools) install_github(\"SBOHVM/RPiR\") These packages have more recent versions available. Which would you like to update? 1: All                               2: CRAN packages only                3: None                              4: plyr      (1.8.4 -> 1.8.5) [CRAN] 5: cli       (1.1.0 -> 2.0.0) [CRAN] 6: backports (1.1.4 -> 1.1.5) [CRAN] Do you want to install from sources the package which needs compilation? library(RPiR)"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/install_github.html","id":"create-a-github-account","dir":"Articles > Pages","previous_headings":"","what":"Create a GitHub account","title":"Course preparation - GitHub","text":"Create GitHub account - go https://github.com/ sign personal university email address Verify account","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/install_github.html","id":"potential-problems","dir":"Articles > Pages","previous_headings":"Create a GitHub account","what":"Potential problems","title":"Course preparation - GitHub","text":"already GitHub account, try registering education account using link. receive emails course email address registered , already account aware . can change email address GitHub uses profile need .","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/install_github.html","id":"ask-to-be-added-to-the-sbohvm-github-organisation","dir":"Articles > Pages","previous_headings":"","what":"Ask to be added to the SBOHVM GitHub organisation","title":"Course preparation - GitHub","text":"Go Discussion section RPiR repository GitHub, create new discussion (category Registration)1. Simply ask added organisation. ’ve added , ’ll respond accept invitation acknowledge successfully joined. discussion section R package hold discussions answer questions course, may want bookmark .","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/install_github.html","id":"set-up-git-and-github-with-rstudio","dir":"Articles > Pages","previous_headings":"","what":"Set up git and GitHub with RStudio","title":"Course preparation - GitHub","text":"RStudio, open RStudio > Preferences (Tools > Global Options ’re using Windows). Go GIT/SVN tab ensure Enable version control interface RStudio projects checked. ’re , make sure git executable. box empty, need install git. , go scroll Installation section, restart RStudio. Note git installed different installing libgit2 installed RPiR package earlier, may install git , even fixed problems earlier! Now back RStudio, tell git user name email address (used label commit make GitHub). Make sure email address enter one registered GitHub. First, load usethis package calling library(usethis) (doesn’t work, install first). configure git using: RStudio now remember details, don’t worry enter future. , however, check username email address entered correctly! terminal tab, input following (work Mac):","code":"install.packages(\"usethis\") # If need be library(usethis)  use_git_config(scope = \"user\",                user.name = \"insert_github_username_here\",                user.email = \"insert_email_address_here\") git config --global --list"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/install_github.html","id":"add-a-personal-access-token-pat","dir":"Articles > Pages","previous_headings":"","what":"Add a Personal Access Token (PAT)","title":"Course preparation - GitHub","text":"RStudio, run: open GitHub page browser, like :  Scroll bottom page click green Generate Token button. screen now look something like :  Copy alphanumeric string (green box) clicking tiny, blue clipboard. Now back RStudio, run: prompt RStudio Console tab “Enter new password token”. Paste alphanumeric string copied . Now run: open .Renviron file new tab. file paste GITHUB_TOKEN=my_github_pat, replacing my_github_pat alphanumeric string copied earlier. Now save file restart RStudio ’re done. Note problems getting RStudio interact GitHub, may useful call: information.","code":"usethis::create_github_token() gitcreds::gitcreds_set() usethis::edit_r_environ() usethis::git_sitrep()"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/install_troubleshooting.html","id":"restarting-r","dir":"Articles > Pages","previous_headings":"","what":"Restarting R","title":"Course preparation - troubleshooting","text":"Quite often restarting R (Session > Restart R) can solve problem. Just remember ’ve restarted R, ’ll need call library(devtools) load back RStudio. Also, find ’re stuck loop (perhaps installing fansi), R asking ’d like restart (package already loaded):  just say restarting second time.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/install_troubleshooting.html","id":"non-zero-exit-status","dir":"Articles > Pages","previous_headings":"","what":"Non-zero exit status","title":"Course preparation - troubleshooting","text":"Try restarting R (Session > Restart R) reinstalling whatever package non-zero exit status (zero success, non-zero failed install), case rlang: Assuming worked, restart R (!), re-run install_github(\"SBOHVM/RPiR\").","code":"Warning in install.packages :   installation of package ‘rlang’ had non-zero exit status install.packages(\"rlang\")"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/install_troubleshooting.html","id":"rtools-is-required-to-build-r-packages-but-is-not-currently-installed","dir":"Articles > Pages","previous_headings":"","what":"Rtools is required to build R packages but is not currently installed…","title":"Course preparation - troubleshooting","text":"Go download install Rtools. might also associated package install error, : case reinstall whatever package problem, case rlang package: Assuming worked, restart R (!), re-run install_github(\"SBOHVM/RPiR\").","code":"WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding: namespace ‘rlang’ 0.4.0 is already loaded, but >= 0.4.1 is required install.packages(\"rlang\")"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/install_troubleshooting.html","id":"cannot-remove-prior-installation","dir":"Articles > Pages","previous_headings":"","what":"Cannot remove prior installation…","title":"Course preparation - troubleshooting","text":"remove prior installation error, try restarting R (Session > Restart R) reinstalling whatever package Windows couldn’t remove, case rlang: Assuming worked, restart R (!), re-run install_github(\"SBOHVM/RPiR\").","code":"\"Error in install.packages : cannot remove prior installation of package ‘rlang’ \" install.packages(\"rlang\")"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/install_troubleshooting.html","id":"try-removing-c---00lock","dir":"Articles > Pages","previous_headings":"","what":"Try removing ‘C:.../00LOCK’","title":"Course preparation - troubleshooting","text":"one, need find 00LOCK file delete . try installing whatever package unpacked, case rlang: Assuming worked, restart R (!), re-run install_github(\"SBOHVM/RPiR\"). doesn’t work couple attempts, can try installing package ignoring lock files:","code":"package ‘rlang’ successfully unpacked and MD5 sums checked Error in install.packages : ERROR: failed to lock directory ‘C:\\Users\\User\\Documents\\R\\win-library\\3.6’ for modifying Try removing ‘C:\\Users\\User\\Documents\\R\\win-library\\3.6/00LOCK’ install.packages(\"rlang\") install.packages(\"Rcpp\", dependencies = TRUE, INSTALL_opts = '--no-lock')"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/install_troubleshooting.html","id":"fortran-on-mac","dir":"Articles > Pages","previous_headings":"","what":"Fortran on Mac","title":"Course preparation - troubleshooting","text":"trouble getting package (e.g. vegan) install inscrutable errors mention fortran, normal! ’re Mac, go site download correct version gfortran depending computer install . restart R try ! ’re Windows platform find error, ask help!","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/install_troubleshooting.html","id":"libgit2-on-mac-linux","dir":"Articles > Pages","previous_headings":"","what":"libgit2 on Mac / Linux","title":"Course preparation - troubleshooting","text":"Mac, ’s likely got error need libgit2 installed. , probably also need install Homebrew - follow instructions https://brew.sh . Homebrew installed, can install libgit2 using Homebrew opening Terminal app typing: may happen Linux, need use distribution’s package manager install either libgit2-dev libgit2-devel, depending whether Debian/Ubuntu Fedora/CentOS/RHEL, respectively.","code":"brew install libgit2"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/loops.html","id":"for-----loops","dir":"Articles > Pages","previous_headings":"","what":"for (...) loops","title":"Loops","text":"loops allow us repeat something fixed number times (e.g. per element vector, per row data frame, etc.). called : run loop, variable (word) updated next element (, vector greetings). introduced loops week 1 Lecture 5b Practical -1. used Practical 1-1 onwards. section R4DS (within general chapter Iteration) covers loops. loops also covered R Coder .","code":"greetings <- c(\"Hello\", \"Goodbye\") for (word in greetings) {   # body }"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/loops.html","id":"while-----loops","dir":"Articles > Pages","previous_headings":"","what":"while (...) loops","title":"Loops","text":"loops allows us repeat something condition still TRUE. particularly useful don’t know advance exactly many times something done, can used situation. Unlike loops though, need update everything manually time around: test checked beginning iteration, long test continues TRUE, code block inside curly brackets { ... } run. careful… don’t update test inside curly brackets, loop continue forever! However, (!) test finally FALSE, loop end R continue next line code loop. introduced Lecture 6a, used practical2-4 onwards. section R4DS (within general chapter Iteration) covers loops. loops also covered R Coder .","code":"test <- some_test() while (test) {   # Do something   test <- update(something) }"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/notebooks.html","id":"headers","dir":"Articles > Pages","previous_headings":"","what":"Headers","title":"R Notebook","text":"","code":"#' # First level header #'  #' A nice paragraph. #' #' ## Second level header #'  #' Important information #'  #' ### Third level header #' #' More text #'"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/notebooks.html","id":"first-level-header","dir":"Articles > Pages","previous_headings":"","what":"First level header","title":"R Notebook","text":"nice paragraph.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/notebooks.html","id":"second-level-header","dir":"Articles > Pages","previous_headings":"First level header","what":"Second level header","title":"R Notebook","text":"Important information","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/notebooks.html","id":"third-level-header","dir":"Articles > Pages","previous_headings":"First level header > Second level header Headers","what":"Third level header","title":"R Notebook","text":"text","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/notebooks.html","id":"text","dir":"Articles > Pages","previous_headings":"","what":"Text","title":"R Notebook","text":"can write text like #' comment characters describe program. ’re using RStudio, can just press Enter every time get dotted vertical line window R text doesn’t scroll page unnecessarily. automatically get right comment characters can just carry typing. However, lots things can format text. instance, can italicise bold text easily want . Information basic rules writing text (R) daringfireball, though stuff explained . format called Markdown, describes everything happens #' symbols, though symbols nothing Markdown, just get Markdown R. need press enter twice start new paragraph, ’re starting new style text, like list header need blank comment line make sure words don’t appear previous paragraph accident. first paragraph bold second paragraph italics","code":"#' **first paragraph in bold** #' #' *second paragraph in italics* #'"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/notebooks.html","id":"lists","dir":"Articles > Pages","previous_headings":"","what":"Lists","title":"R Notebook","text":"text followed empty line, list. Lists started numbers, letters, symbols (-, + *) Write equation encapsulating expression $ \\(D = x^2\\) \\(E = sin(q)\\) Like ! text empty line.","code":"#' Some text followed by an empty line,  #' then a list. #'  #' 1. Lists are started by numbers,  #'    letters, or symbols (`-`, `+`,  #'    or `*`) #' 2. Write an equation by encapsulating #'    an expression in `$` #' 3. For instance: #'    - $D = x^2$ #'    - $E = sin(q)$ #' 4. Note that you need an indent to #'    make a sub-list #'    a. Like this! #' #' More text after an empty line. #'"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/notebooks.html","id":"code","dir":"Articles > Pages","previous_headings":"","what":"Code","title":"R Notebook","text":"R comments just appear normal, outputs appear ## . don’t like , can remove ## output like : Note: want remove ## entire report, can put knitr::opts_chunk$set(comment = \"\") top script. Text can also include R, \\(y = (3+x)^2\\) = 25 gives number calculated R.","code":"# A useful comment x <- 2 y <- (3 + x)^2 y # A useful comment x <- 2 y <- (3 + x)^2 y ## [1] 25 #+ comment=\"\"  x <- 2 x + 3 x <- 2 x + 3 [1] 5 #' Text can also include R, so  #' $y = (3+x)^2$ = {{y}} #' gives you the number calculated in R. #'"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/notebooks.html","id":"figures","dir":"Articles > Pages","previous_headings":"","what":"Figures","title":"R Notebook","text":"’s basic figure generated using base R plot() function:  can specify size plot add caption like : Figure 2: sine curves Note: #+ options don’t need split multiple lines. avoid text wrapping code block. Note also: can centre figure using #+ fig.align=\"center\". haven’t shown doesn’t work two-column formatting.","code":"q <- 0:100 D <- sin(q) plot(q, D) q <- 0:100 D <- sin(q) plot(q, D) #+ fig.width=2.5, fig.height=2.5,  #+ fig.cap=\"Figure 2: Some sine curves\"  E <- sin(q/10) plot(q, E, type='l') lines(q, D, col=2, lty=2) E <- sin(q/10) plot(q, E, type='l') lines(q, D, col=2, lty=2)"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/notebooks.html","id":"plot_populations","dir":"Articles > Pages","previous_headings":"Figures","what":"plot_populations()","title":"R Notebook","text":"RPiR package uses plot_simple() plot_populations() functions automate functionality. addition, base plot() arguments can passed extra customization, see ?base::plot details. example, can generate plot like :  Add additional line different style, width, colour, like :  fix legend multi-line plot (making sure order elements legend, col, lty arguments matches order plot lines!), like :  Note: can specify location legend using x-y coordinates strings \"topright\", see ?legend details.","code":"library(RPiR)  results1 <- data.frame(time = 0:100, growth = exp((0:100) / 10)) plot_populations(results1) results1 <- data.frame(time = 0:100, growth = exp((0:100) / 10)) results2 <- data.frame(time = 0:100, death = exp(seq(10, 0, by = -0.1)))  plot_populations(results1) plot_populations(results2, lty = 2, lwd = 3, col = \"red\", new.graph = FALSE) results1 <- data.frame(time = 0:100, growth = exp((0:100) / 10)) results2 <- data.frame(time = 0:100, death = exp(seq(10, 0, by = -0.1)))  plot_populations(results1, with.legend = FALSE) plot_populations(results2, lty = 2, lwd = 3, col = \"red\", new.graph = FALSE)  legend(\"topright\",         legend = c(\"growth\", \"death\"),         lty = c(1, 2),        lwd = c(1, 3),        col = c(\"black\", \"red\"))"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/notebooks.html","id":"potential-problems","dir":"Articles > Pages","previous_headings":"Figures","what":"Potential problems","title":"R Notebook","text":"compiling report, might encounter error along lines : might code looks something like : error occured first call plot_populations() separated second call plot_populations() text block #'. compile report, first second code blocks called isolation, second call plot_populations() isn’t aware first plots’ existance. solve problem, : recordPlot() stores plot generated first code chunk saves plt, afterwhich replayPlot(plt) recovers plot generated first code chunk, plot_populations(results2, lty = 2, lwd = 3, col = \"red\", new.graph = FALSE) can called.","code":"Error in plot.xy(xy.coorrds(x, y), type = type, ...): plot.new has not been  called yet Calls: <Anonymous> ... plot_populations -> <Anonymous> ->  lines.default -> plot.xy Execution halted results1 <- data.frame(time = 0:100, growth = exp((0:100) / 10)) results2 <- data.frame(time = 0:100, death = exp(seq(10, 0, by = -0.1)))  # Generate a figure plot_populations(results1)  #' Some nice descriptive text for my report  # Try to plot another line on the same figure plot_populations(results2, lty = 2, lwd = 3, col = \"red\", new.graph = FALSE) results1 <- data.frame(time = 0:100, growth = exp((0:100) / 10)) results2 <- data.frame(time = 0:100, death = exp(seq(10, 0, by = -0.1)))  plot_populations(results1) plt <- recordPlot()  #' Some nice descriptive text for my report  replayPlot(plt) plot_populations(results2, lty = 2, lwd = 3, col = \"red\", new.graph = FALSE)"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/notebooks.html","id":"equations","dir":"Articles > Pages","previous_headings":"","what":"Equations","title":"R Notebook","text":"equation just calculated written neatly, inline text: \\(\\text{mean}(x) = 1/n \\sum_{=1}^n x_i\\) can also write equation line: \\[y = \\frac{x_i}{2x^2 + 3}\\] write greek symbols accents: \\[\\gamma = \\bar{\\alpha} \\times \\beta\\] Note: complex syntax equations LaTeX. haven’t seen don’t need use , lots information writing formulae , specific things can put formula .","code":"n <- 5 x <- rnorm(n) sum(x) / n  #' Here is the equation we just   #' calculated written out neatly, inline  #' with the text:   #' $\\text{mean}(x) = 1/n \\sum_{i=1}^n x_i$ #'  #' We can also write an equation on its  #' own line: #' #' $$y = \\frac{x_i}{2x^2 + 3}$$ #' #' and write greek symbols and accents: #' #' $$\\gamma = \\bar{\\alpha} \\times \\beta$$ #'  # And here's another code block mean(x) / var(x) n <- 5 x <- rnorm(n) sum(x) / n ## [1] 0.4403995 # And here's another code block mean(x) / var(x) ## [1] 0.1617711"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/packages.html","id":"some-reassurance","dir":"Articles > Pages","previous_headings":"","what":"Some reassurance!","title":"Create an R Package","text":"First, talks easy rstudio::global 2021: Make package - Make friends ’re Already Ready: Zen Art R Package Development","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/packages.html","id":"creating-an-r-package","dir":"Articles > Pages","previous_headings":"","what":"Creating an R Package","title":"Create an R Package","text":"’ll find guide create R package linked GitHub RStudio guide website.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/packages.html","id":"other-reference-material","dir":"Articles > Pages","previous_headings":"","what":"Other reference material","title":"Create an R Package","text":"R Packages book good resource covering aspects writing packages R. course, recommend using tools RStudio usethis package easy package development. , standard package structure automatically generated . links might useful: .gitignore: contains regular expressions ignored Git, info .Rbuildignore: contains regular expressions ignored R CMD check / building package source, info demo/: contains R demo files, info (’ve populated d0105_run_birth_death.R, script Practical 1-5) DESCRIPTION: contains metadata package, info man/: contains code used generate documentation package built (don’t edit files, process automated), info NAMESPACE: contains names imported exported functions (don’t edit file either), info R/: contains code used generate functions package built (’ve populated step_deterministic_birth_death.R, step function Practical 1-5), info README.md: contains markdown used generate GitHub repository readme page, info githubusername.Rproj: RStudio project file, used make directory RStudio project, can used shortcut opening project filesystem, info ","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/packages_guide.html","id":"package-structure","dir":"Articles > Pages","previous_headings":"","what":"Package structure","title":"Reference - R Packages","text":"easiest way create R package RStudio generate one automatically menus, via File > New project… > New Directory > R Package. Give package suitably descriptive name packagename, remembering ’s good practice name repository match name package. ’s important aware name package: “contain (ASCII) letters, numbers dot, least two characters start letter end dot” (ref). Though package names include dot. ’ve picked good name, check box next Create git repository, click Create Project.  find (1) new RStudio project created called packagename, (2) working directory now packagename, (3) inside directory number files directories:  ’ll explore files due course. mean time, commit files nice descriptive comment, don’t push just yet.  First, need set GitHub repository number ways , easiest way connect existing RStudio project GitHub running : process automatically edit DESCRIPTION file ask whether ’s OK commit changes, just say yes, GitHub repository open automatically window browser.  don’t README yet, click Add README type something nice README file (browser), scroll Commit new file. GitHub repository now look something like :  RStudio look like :  Now ’re connected GitHub, click blue Pull arrow. , see README.md file pulled GitHub working directory, contents matching wrote GitHub. Open confirm , close hello.R file – automatically generated RStudio don’t need .  fact, files delete: R/hello.R, man/hello.Rd (documentation related hello.R file don’t need), NAMESPACE file package root.  Now run devtools::document(). ’ll notice, Git tab, NAMESPACE changed deleted modified. devtools::document() created new NAMESPACE file. just delete recreate NAMESPACE? now , automatically populated whenever call devtools::document(), possible use devtools::document() create new file.","code":"usethis::use_github(organisation = \"SBOHVM\", private = TRUE)"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/packages_guide.html","id":"package-documentation","dir":"Articles > Pages","previous_headings":"","what":"Package documentation","title":"Reference - R Packages","text":"Now ’re going write documentation package. need create new file called packagename-package.R (replacing packagename name package). Save file R directory. ’ve finished writing file, run devtools::document() generate documentation files ?packagename load documentation RStudio. can see, : first line package title second chunk text (separated blank line) package Description third chunk text (separated blank line) Details section everything labeled tag, order doesn’t matter @author Author(s) ’s object represent package, write NULL (line 15), manually label @docType, @name, @alias tags (lines 11-13).  next thing need edit DESCRIPTION file, info . requires following prompts template. thing ’ve done differently combine Author Maintainer single entry, .e. changed allows us include information, info .","code":"Author: Who wrote it Maintainer: The package maintainer <yourself@somewhere.net> Authors@R: person(\"Sonia\", \"Mitchell\", email = \"sonia.mitchell@glasgow.ac.uk\",                   role = c(\"cre\", \"aut\"), comment = c(ORCID = \"0000-0003-1536-2066\"))"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/packages_guide.html","id":"functions-and-documentation","dir":"Articles > Pages","previous_headings":"","what":"Functions and documentation","title":"Reference - R Packages","text":"Now ’m going add new function (can add function like). Make sure name function file ’re writing save R directory. ’ve also added documentation function (details described ). can run devtools::document() populate NAMESPACE automatically generate documentation files man directory. can run ?my_plot look .  first line title. next section (separated blank line) Description. description can continue onto multiple lines long don’t start writing paragraphs blank lines . true following examples. Usage generated automatically function . everything labeled tag, order doesn’t really matter, @param tag used document Arguments. Note format @param argument description. @return tag used document output function Value section. @export tag used identify function exported package. , function intended usable internal (function called, used internally functions). Finally, @examples tag used document Examples section. Note , can use blank lines want usual, comments encouraged. want able install function part package, ’s one thing left can . function, my_plot() dependent ggplot2 package. , my_plot() uses functions ggplot2 package therefore needs ggplot2 installed work. can configure package happens automatically.","code":"#' my_plot #' A very simple plotting function #' @param data \\code{data.frame} containing data #' @param x column containing x-axis data #' @param y column containing y-axis data #' @param title \\code{string} containing plot title #' @return Returns a \\code{ggplot} object #' @export #' @examples #' # Generate data #' data <- data.frame(R = 1:5, fun = c(1:5)^2) #' # Plot results #' my_plot(data, R, fun, \"Plot showing how fun increases with R\")"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/packages_guide.html","id":"add-dependencies","dir":"Articles > Pages","previous_headings":"","what":"Add dependencies","title":"Reference - R Packages","text":"mentioned previously, my_plot() function dependent ggplot2 package , need add dependency ggplot2 package. need four things. Inside my_plot() function, need explicitly say ggplot(), aes(), theme_linedraw(), geom_point(), geom_line(), labs() come ggplot2 package. done prepending ggplot2::. Add entry Imports field DESCRIPTION file (lines 15-16). can automated using usethis::use_package(\"ggplot2\").  Note need add dependency package exists within GitHub repository, can use instead: Add @import tag packagename-package.R file (see line 15).  Run devtools::document() populate NAMESPACE file @import tag packagename-package.R. Note never edit NAMESPACE hand.","code":"my_plot <- function(data, x, y, title) {   ggplot2::ggplot(data, ggplot2::aes(x = {{ x }},                                      y = {{ y }})) +   ggplot2::theme_linedraw() +   ggplot2::geom_point() +   ggplot2::geom_line() +   ggplot2::labs(title = title) } usethis::use_dev_package(\"RPiR\", remote = \"SBOHVM/RPiR\")"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/packages_guide.html","id":"add-a-demo","dir":"Articles > Pages","previous_headings":"","what":"Add a demo","title":"Reference - R Packages","text":"last thing ’re going add demo file. need add demo directory package root. demos live. Next need create 00Index file (file extension) inside demo directory. file must list names demos installed part package. file look something like : Note entry written new line, standard format. , name demo (’s filename), followed (least) three spaces, followed simple description. Also note empty line end file. Now ’re going add demo, standard R file (case including little R markdown). important thing note longer need source() files, since functions need use can installed part package.  Next, need install package using devtools::install(). , can run demo(package = \"packagename\") list demos package, demo(\"my_demo\", package = \"packagename\") run my_demo demo.","code":"my_demo   A simple demo"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/packages_guide.html","id":"add-data","dir":"Articles > Pages","previous_headings":"","what":"Add data","title":"Reference - R Packages","text":"next thing ’re going add data package. , run usethis::use_data_raw(\"BCI\"). create new directory, called data-raw within file called BCI.R. put raw, unedited data directory. code use process data written BCI.R. processing file end looking something like : Next need generate packaged data running processing script. use_data() function create data directory, within rds file containing dataset. next step open .gitignore file add data-raw new line ignore contents directory. reason , contents data-raw part package (installable data exists within data directory) don’t want upload large files GitHub. Next document data (info ). , need create data.R file R directory. look something like : usual, need run devtools::document() automatically generate documentation files devtools::install() install package. , can run data(package = \"packagename\") list data package.","code":"## code to prepare `BCI` dataset goes here  # Read the data raw.data <- read.csv(\"data-raw/myrawdata.csv\", header = TRUE)  # Process the data BCI <- some_tidying_process(raw.data)  # Add the data to your package usethis::use_data(BCI, overwrite = TRUE) #' mydataset #'  #' Description of mydataset #'  #' @docType data #' @usage data(mydataset) #'  #' @format A data frame with x rows and y variables: #' \\describe{ #'   \\item{variable1}{description} #'   \\item{variabl2}{description} #'   ... #' } #'  #' @source \\url{http://somewhere.important.com/} \"mydataset\""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/packages_guide.html","id":"alternative-setup","dir":"Articles > Pages","previous_headings":"","what":"Alternative setup","title":"Reference - R Packages","text":"reason can’t get usethis::use_github() work, follow instructions create repository GitHub README file. Remember name repository match name package aware name package: “contain (ASCII) letters, numbers dot, least two characters start letter end dot” (ref). Though package names include dot. following example, name repository (package) packagename. repository GitHub, follow instructions clone repository add new project RStudio. create package structure running: point ’ll get warning saying shouldn’t really nesting RStudio projects inside . Ignore say yes, want continue. ’ll end file structure looks bit like : Take everything structure directory except structure.Rproj .gitignore files put packagename directory. Now delete structure directory move packagename project RStudio. ’ve done , create empty directory within packagename called man. file structure now look like : Finally, delete NAMESPACE file run devtools::document() create new NAMESPACE file. just delete recreate NAMESPACE? now , automatically populated whenever call devtools::document(), possible use devtools::document() create new file. Also, don’t forget keep pushing changes GitHub. can now rejoin instructions .","code":"usethis::create_package(\"structure\") packagename/ ---> .gitignore                   README.md                   packagename.Rproj                   structure/        ---> .gitignore                                           .Rbuildignore                                          DESCRIPTION                                          NAMESPACE                                          structure.Rproj                                          R/ packagename/ ---> .gitignore                   README.md                   packagename.Rproj                   .Rbuildignore                   DESCRIPTION                   NAMESPACE                   R/                   man/"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/packages_guide.html","id":"final-thoughts","dir":"Articles > Pages","previous_headings":"","what":"Final thoughts","title":"Reference - R Packages","text":"get stuck need troubleshoot package, try running devtools::check(). build package clean environment potentially highlight issues might causing problems. Whenever make change package (particularly ’re pushing GitHub), try get habit changing version number. important allows keep track version code used particular analysis. format usually major.minor.patch, info . version package recorded DESCRIPTION file, like : , added enough warrant increasing version number 0.1.0 0.2.0, now. Remember push change GitHub .","code":"Version: 0.1.0"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/packages_guide.html","id":"sharing-is-caring","dir":"Articles > Pages","previous_headings":"","what":"Sharing is caring","title":"Reference - R Packages","text":"thing left now share package people. go ahead give access (GitHub website, Settings > Manage access > Invite teams people). ask run: Go ahead try install package. Try run demo. Note reason can’t install package using install_github(), can clone repository instead run devtools::install() usual way.","code":"devtools::install_github(\"SBOHVM/packagename\")"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/reference.html","id":"british-ecological-society","dir":"Articles > Pages","previous_headings":"","what":"British Ecological Society","title":"Reference - General","text":"British Ecological Society (BES) oldest ecological society world, one largest. publishes several excellent journals, including Methods Ecology Evolution, publishes many software packages. society also provides many several guides better science. part course, require read following guides: Reproducible Code Data Management","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/reference.html","id":"hadley-wickham","dir":"Articles > Pages","previous_headings":"","what":"Hadley Wickham","title":"Reference - General","text":"Hadley Wickham Chief Scientist RStudio / Posit PBC. created original ggplot library PhD. days data analysis packages collectively known tidyverse, famous probably ggplot2 dplyr. written three useful books data analysis software development R: Solutions exercises Solutions exercises Solutions exercises R Packages (Jenny Bryan, see work ) recommend books reference material, point specific chapters different times, books probably long read entirety. Nonetheless keep future reference, contain enormous amount knowledge R (relatively!) compact form. BOHVM also interviewed Hadley part Naturally Speaking podcast came Glasgow receive award university years ago. can hear interview . well lot tidyverse, later covers lot reasons course exists, kind techniques teaching .","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/reference.html","id":"jenny-bryan","dir":"Articles > Pages","previous_headings":"","what":"Jenny Bryan","title":"Reference - General","text":"Jenny Bryan statistician also works RStudio / Posit PBC. also produced enormous amount fantastic material, actually aligns even closely course Hadley’s work, since interested reproducibility better coding practice.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/reference.html","id":"understanding-avoiding-and-fixing-errors-in-your-code","dir":"Articles > Pages","previous_headings":"Jenny Bryan","what":"Understanding, avoiding and fixing errors in your code","title":"Reference - General","text":"part course, require watch keynote rstudio::conf 2020 Jenny. excellent keynote errors R identify fix .","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/reference.html","id":"better-coding-practices","dir":"Articles > Pages","previous_headings":"Jenny Bryan","what":"Better coding practices","title":"Reference - General","text":"Jenny (Jim Hester) written guide called “forgot tell R” available online . also gave talk years ago (2015) Reproducible Science Workshop part course require flick slides give idea better name files future.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/reference.html","id":"git-and-github-in-r-and-rstudio","dir":"Articles > Pages","previous_headings":"Jenny Bryan","what":"Git and GitHub in R and RStudio","title":"Reference - General","text":"Git complex tool – used manage development whole Linux kernel! – cover basic aspects course. well , Jenny (others) written excellent resource using git GitHub R – Happy Git GitHub useR, much detail abbreviated materials, good reference confused want something complicated. also gave talk topic rstudio::conf 2017.","code":""},{"path":[]},{"path":"https://sbohvm.github.io/RPiR/articles/pages/reference.html","id":"reproducible-and-generally-good-coding-practices","dir":"Articles > Pages","previous_headings":"Other materials","what":"Reproducible (and generally good) coding practices","title":"Reference - General","text":"many materials reproducible research, including BES guide mentioned . background, recommend watching short clip Matt Anticole TED-Ed. require read article sharing code guide good coding practices. None written specifically R programmers, useful tips everyone (specific R).","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/reference.html","id":"r-cheatsheets","dir":"Articles > Pages","previous_headings":"Other materials","what":"R cheatsheets","title":"Reference - General","text":"RStudio contributors provide variety cheatsheets summarise functionality variety different topics R, including markdown reports, RStudio , everything Base R package development parallel computing R. main cheatsheets can found RStudio Help > Cheatsheets.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/reference.html","id":"r-markdown","dir":"Articles > Pages","previous_headings":"Other materials","what":"R Markdown","title":"Reference - General","text":"R Markdown allows generate reports R code , RStudio puts , “turn analyses high quality documents, reports, presentations dashboards.” well cheatsheets reference guide , variety resources R Markdown: Pandoc’s markdown website, describes non-R parts format R Markdown: Definitive Guide - e-book Yihui Xie, J. J. Allaire Garrett Grolemund great resources, can help produce everything simple reports generating course, lectures slides website use run course, complex interactive Shiny apps. Like Hadley Wickham’s books, probably references refer later course, completely comprehensive want look anything . Particularly useful instructions Happy Git GitHub useR changing R Markdown R scripts kind generating exercises.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/reference.html","id":"r-coder","dir":"Articles > Pages","previous_headings":"Other materials","what":"R Coder","title":"Reference - General","text":"Learn R section website provides explanations lot common techniques use course Programming section. confused explanations, may find useful.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/reference.html","id":"r-coding-style","dir":"Articles > Pages","previous_headings":"Other materials","what":"R coding style","title":"Reference - General","text":"Version 1 Advanced R provides style guide. version 2, replaced tidyverse style guide. Google adaptation . ask (even recommend) follow , well thought , may decide like one . ask style consistent, use meaningful names functions variables, never use dots (.) function names use rm(...) install packages code submit assessment.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/rstudio.html","id":"connect-your-github-repository-to-an-rstudio-project","dir":"Articles > Pages","previous_headings":"","what":"Connect your GitHub repository to an RStudio project","title":"RStudio projects and GitHub","text":"guide assumes GitHub repository set . need help , ’s another guide take . ’re set , click green Code button copy URL associated GitHub repository clipboard  RStudio, click File > New project…, since ’re integrating version control project workflow, select Version Control.  Select option clone project Git repository.  Paste Repository URL first box, click Browse… navigate git folder desktop. don’t git folder desktop make one, ’s good practice keep projects together well organised. RStudio create new subdirectory mirror contents Git repository (make sure don’t already folder name repository created, cause problems). Now click Create Project enter GitHub username password ’re asked.  Congratulations! successfully created new RStudio project (now added version control). example (although note images slightly different), (1) RStudio project called richardreeveSeries01, (2) new directory, richardreeveSeries01, created, now working directory, inside directory (3) three files, including GitHub README.md file (imported GitHub repository), RStudio project file (richardreeveSeries01.Rproj), invisible .gitignore file (created RStudio). Note appearance new Git tab next Connections. important.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/rstudio.html","id":"how-to-use-git-in-rstudio","dir":"Articles > Pages","previous_headings":"","what":"How to use Git in RStudio","title":"RStudio projects and GitHub","text":"Compare contents working directory files listed Git tab. Git tab useful tool shows remote directory (GitHub repository) differs local directory (case ~/Desktop/git/richardreeveSeries01). Currently, README.md file local directory identical one remote directory. ’s can’t see Git tab. Instead, .gitignore richardreeveSeries01.Rproj listed yellow question marks Status column. icons mean? “?” - Files directories don’t currently exist git repository (either want commit add .gitignore) “” - Files staged ready commit (’re process committing ) “M” - Files modified versions repository (definately want commit ) “D” - Files longer local directory (’ve likely deleted want commit absence GitHub) Open README.md file clicking filename Files tab. look familiar? (Compare contents file repository GitHub)  Usually GitHub README (written GitHub Flavored Markdown) describe contents GitHub repository give example use contents said repository. Make edits README.md save file. Note make edits README file, Status changes “M”. means file local directory longer identical file remote directory (GitHub). Check box next file want commit (README.md), click Commit.  RStudio: Review Changes window opened. Make sure checkbox ticked next README.md enter Commit message. message describe changes ’ve made file ’re uploading. changes shown lower half screen, deletions insertions highlighted red green, respectively. Click Commit stage changes (preparing upload GitHub).  Congratulations! README.md now staged, 5 insertions. Close RStudio: Review Changes window.  Notice README.md disappeared Git tab? ’s ’s packaged (staged) ready shipped (pushed) GitHub. Click green Push arrow, push staged files (moment, just README.md) GitHub. Enter password ’re asked .  Congratulations ! ’ve successfully pushed changes GitHub. Go take look GitHub repository ’ll see GitHub README updated.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/rstudio.html","id":"final-remarks","dir":"Articles > Pages","previous_headings":"","what":"Final remarks","title":"RStudio projects and GitHub","text":"RStudio offers integrated version control, useful daily tasks pushing, pulling, reviewing changes (click Diff Git tab). However, just tip iceberg. time, take look links .","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/rstudio.html","id":"additional-resources","dir":"Articles > Pages","previous_headings":"","what":"Additional resources","title":"RStudio projects and GitHub","text":"R packages - Git GitHub, Hadley Wickham Pro Git, Scott Chacon Ben Straub git/github guide, Karl Broman git - simple guide, Roger Dudler","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/tips.html","id":"general","dir":"Articles > Pages","previous_headings":"","what":"General","title":"Tips and tricks","text":"Keyboard shortcuts: Note: running R 4.1+ can switch native pipe operator, |>. Preferences > Code check box “Use native pipe operator”. Note also: easy way remember Rename scope shortcut Pipe + Alt. encapsulate text quotes brackets, highlight text, type \" (. generate code used recreate object:","code":"x <- data.frame(a = 2, b = 4) y <- dput(x) #> structure(list(a = 2, b = 4), class = \"data.frame\", row.names = c(NA,  #> -1L)) y #>   a b #> 1 2 4"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/tips.html","id":"writing-loops","dir":"Articles > Pages","previous_headings":"","what":"Writing loops","title":"Tips and tricks","text":"generate sequence numbers iterate : alternatively: print counter console: Note: \\n moves “print head” new line, whereas \\r move back start line.","code":"data <- c(1, 33, 100, 102) seq_along(data) #> [1] 1 2 3 4 data <- data.frame(a = 1:3, b = 4:6) seq_len(nrow(data)) #> [1] 1 2 3 for (i in 1:3) {   cat(\"\\n\", i) } #>  #>  1 #>  2 #>  3"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/tips.html","id":"command-history","dir":"Articles > Pages","previous_headings":"","what":"Command history","title":"Tips and tricks","text":"Keyboard shortcuts (console):","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/tips.html","id":"writing-functions","dir":"Articles > Pages","previous_headings":"","what":"Writing functions","title":"Tips and tricks","text":"generate function skeleton code snippet, type fun hit tab return (select snippet): Keep hitting tab move name variables body function. Function extraction – turn chunk code function, highlight chunk code, press Control + Alt + X Mac (Windows) enter suitable function name prompted. , : turns : Note: can make custom code snippets Tools > Global Options > Code clicking Edit Snippets Snippets section.","code":"name <- function(variables) {  } x * y multiply <- function(x, y) { x * y }"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/tips.html","id":"graphics","dir":"Articles > Pages","previous_headings":"","what":"Graphics","title":"Tips and tricks","text":"generate sequence evenly spaced values (useful manually defining axis breaks ggplot2): list names built colours:","code":"x <- c(0, 0.001, 1, 8) pretty(x) #> [1] 0 2 4 6 8 x <- colors() head(x) #> [1] \"white\"         \"aliceblue\"     \"antiquewhite\"  \"antiquewhite1\" #> [5] \"antiquewhite2\" \"antiquewhite3\""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/tips.html","id":"packages","dir":"Articles > Pages","previous_headings":"","what":"Packages","title":"Tips and tricks","text":"Keyboard shortcuts:","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/tips.html","id":"search","dir":"Articles > Pages","previous_headings":"","what":"Search","title":"Tips and tricks","text":"select path file current directory, hit Tab inside : locate files relative project root, installing package: Keyboard shortcuts:","code":"\"\" library(here) #> here() starts at /Users/runner/work/RPiR/RPiR here(\"R\", \"assert_no_globals.R\") #> [1] \"/Users/runner/work/RPiR/RPiR/R/assert_no_globals.R\""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/tips.html","id":"miscellaneous","dir":"Articles > Pages","previous_headings":"","what":"Miscellaneous","title":"Tips and tricks","text":"Keyboard shortcuts: find RMarkdown cheat sheets RStudio, go Help > Cheat Sheets > R Markdown Reference Guide. can also find cheat sheets dplyr, ggplot2, devtools . automatically load packages startup / restarting R: Create .Rprofile file project root Fill anything want loaded startup Note use load packages used analyses, dplyr ggplot2. useful example might : However, can also populate helper functions might regularly use, even R fortunes. generate R fortune, installing fortunes:","code":"library(devtools, quietly = TRUE) fortune()"},{"path":"https://sbohvm.github.io/RPiR/articles/pages/vscode_liveshare.html","id":"visual-studio-code","dir":"Articles > Pages","previous_headings":"","what":"Visual Studio Code","title":"VS Code Live Share","text":"Visual Studio Code (aka VS Code) IDE (Integrated Development Environment) just like RStudio, designed Microsoft multiple languages, just R. , ’s much advanced RStudio, well tailored working R. recommend using RStudio work, may useful occasionally switch VS Code, particularly want work together someone single piece code. can learn using VS Code .","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/vscode_liveshare.html","id":"installing-vs-code","dir":"Articles > Pages","previous_headings":"Visual Studio Code","what":"Installing VS Code","title":"VS Code Live Share","text":"First, download install Visual Studio Code (Note: Visual Studio IDE, happen installed).","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/vscode_liveshare.html","id":"live-share","dir":"Articles > Pages","previous_headings":"","what":"Live Share","title":"VS Code Live Share","text":"VS Code Live Share extension provides great way collaborate code whilst working home. Assuming read/write access enabled, team mates can edit exact code, highlight sections , save , run real-time. Just bear mind edit run code, really happens whoever’s machine set share, means won’t access objects aren’t environment datasets aren’t machine, collaborators working get files separately later. plus side, don’t go office can access code remotely using personalised setup tools.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/vscode_liveshare.html","id":"install-the-extension","dir":"Articles > Pages","previous_headings":"Live Share","what":"Install the extension","title":"VS Code Live Share","text":"Open VS Code install “Live Share” Microsoft extension VS Code marketplace. Exactly look like depends platform, Mac.  ’re , ’re intending work R, may well install: “R” Extension Pack “R LSP Client” REditorSupport extension. need already account GitHub use Live Share.","code":""},{"path":"https://sbohvm.github.io/RPiR/articles/pages/vscode_liveshare.html","id":"share-a-session","dir":"Articles > Pages","previous_headings":"Live Share","what":"Share a session","title":"VS Code Live Share","text":"create new session, click “Live Share” status bar (bottom VS Code window). first time , ’ll prompted sign . Selecting “Sign GitHub” open link browser.  “Authorize VisualStudioLiveShare” accept THINGS…  ’ll know ’re logged name appears status bar left Live Share icon.  point invite link copied clipboard, can share team mates. create new invite link, things: Click Live Share status bar Click name status bar select “InviteOthers (Copy Link)” Click “Live Share” icon side bar open Live Share panel, select “Share (Read/Write)”  ’ve collaborated someone ’ll added contacts ’re online can invite directly clicking “Invite Contact” icon next name.  end session, one following: Click name status bar “Stop Collaboration Session” Select “Stop collaboration session” icon Live Share panel info .","code":""},{"path":"https://sbohvm.github.io/RPiR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sonia Mitchell. Author. Richard Reeve. Maintainer, author.","code":""},{"path":"https://sbohvm.github.io/RPiR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mitchell S, Reeve R (2022). RPiR: Reproducible Programming R. R package version 0.76.11.","code":"@Manual{,   title = {RPiR: Reproducible Programming in R},   author = {Sonia Mitchell and Richard Reeve},   year = {2022},   note = {R package version 0.76.11}, }"},{"path":[]},{"path":"https://sbohvm.github.io/RPiR/index.html","id":"course-preparation","dir":"","previous_headings":"","what":"Course preparation","title":"Reproducible Programming in R","text":"things can start course. details available Guides section website Course preparation. includes instructions making sure R RStudio --date right packages installed , setting git GitHub , installing (RPiR) package . also provide troubleshooting tips case things go wrong installation.","code":""},{"path":"https://sbohvm.github.io/RPiR/index.html","id":"reference-materials-for-the-course","dir":"","previous_headings":"","what":"Reference materials for the course","title":"Reproducible Programming in R","text":"materials available moodle, frankly don’t really like , can find (indeed lot ) information reference page .","code":""},{"path":"https://sbohvm.github.io/RPiR/index.html","id":"running-the-course","dir":"","previous_headings":"","what":"Running the course","title":"Reproducible Programming in R","text":"start course, load RPiR package: can see lectures practicals available using: RStudio, can also open Preferences…, choose Pane Layout, tick box Tutorial click OK. done , find Tutorial pane RStudio, can browse practicals installed .","code":"library(RPiR) available_lectures() available_practicals()"},{"path":"https://sbohvm.github.io/RPiR/index.html","id":"practicals","dir":"","previous_headings":"","what":"Practicals","title":"Reproducible Programming in R","text":"run practical, can click Start Tutorial Tutorial pane RStudio. can run practical inside RStudio pane, click Show new window icon top left open larger separate window (can open multiple practicals simultaneously like ). Alternatively, can use run_practical() function Console pane. example, run_practical(\"practical1-1\") run first practical practical series 1. decide run practical like , able use R console close , suggest open separate instance RStudio run code, one RStudio dedicated running practicals lectures. reset practical want start , click Start link (look tiny grey text left menu), appears running inside Tutorial pane. close practical opened Tutorial pane finished , click red STOP button Tutorial pane close separate window. Clicking instead Home icon return practical list, can resume practical left restarting . close practical opened Console pane finished , close webpage web browser, either hit escape click red STOP button RStudio Console end process. problems practicals running correctly, try running RPiR:::clean_cached_exercises() Console pane force practicals rebuilt. can also browse non-interactive practicals GitHub website (Practicals (html)).","code":""},{"path":"https://sbohvm.github.io/RPiR/index.html","id":"lectures","dir":"","previous_headings":"","what":"Lectures","title":"Reproducible Programming in R","text":"view lecture slides, use run_lecture() function RStudio. example, run_lecture(\"RPiR1-intro\") show first lecture slides. can also see lectures course website using lecture dropdown menus, either slides (Lectures (slides)) single continuous documents later reference (Lectures (html)).","code":""},{"path":"https://sbohvm.github.io/RPiR/index.html","id":"course-contents","dir":"","previous_headings":"","what":"Course contents","title":"Reproducible Programming in R","text":"following core practicals included package: Practical series 1: practical1-1: Exponential growth model; Writing scripts commenting code practical1-2: Exponential growth model; Writing functions practical1-3: Exponential growth model; Sourcing code practical1-4: Exponential growth model; Generalising structuring code practical1-5: Births deaths model; Generalising code practical1-6: Births deaths model; Writing reports RStudio Practical series 2: practical2-1: SIS model; Adapting previous code practical2-2: SIS model; Changing timestep practical2-3: SIS model; Using () loops practical2-4: SIR model; Adapting previous code Practical series 3: practical3-1: Writing R package practical3-2: Simple stochastic birth-death model; Using stop() practical3-3: Stochastic birth-death model; Passing functions arguments practical3-4: Stochastic SIS model practical3-5: Stochastic SIR model practical3-6: Comparing mean stochastic deterministic SIR models Practical series 4: practical4-1: Creating R data package practical4-2: Adding fucntions data package practical4-3: Adding demo Project: project0: Setting project repo project1: Creating species richness Simpson diversity functions project2: Creating general diversity function project3: Adding code cope Shannon entropy Berger-Parker project4: Adjusting diversity function handle multiple values q project5: Extending work examine properties subsampled data well following additional practicals: practicalA-1: Introduction statements comparisons practicalA-2: Introduction functions practicalA-3: Naming things practicalA-4: Introduction loops practicalA-5: Nested functions","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/RPiR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Reproducible Programming in R course — RPiR-package","title":"Reproducible Programming in R course — RPiR-package","text":"RPiR learnr implementation Reproducible Programming R course, developed Institute Biodiversity, Animal Health, Comparative Medicine University Glasgow.","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/RPiR-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reproducible Programming in R course — RPiR-package","text":"run practical, first need load learnr package (see Examples). reset practical, click Start link (look tiny grey text left menu). close practical, close window, click red STOP button RStudio end process. following tutorials included package: 1-1 Exponential growth model; Writing scripts commenting code 1-2 Exponential growth model; Writing functions 1-3 Exponential growth model; Sourcing code 1-4 Exponential growth model; Generalising structuring code 1-5 Births deaths model; Generalising code 1-6 Births deaths model; Writing reports RStudio 2-1 SIS model; Adapting previous code 2-2 SIS model; Changing timestep 2-3 SIS model; Using () loops 2-4 SIR model; Adapting previous code 3-1 Writing R package 3-2 Stochastic population growth model; Using stop() 3-3 Stochastic births deaths model; Passing functions arguments 3-4 Stochastic SIS model 3-5 Stochastic SIR model 3-6 Compare mean stochastic model deterministic SIR model 4-1 Biodiversity; Writing data package 4-2 Biodiversity; Writing package demo 4-3 Biodiversity; Adding package functions documentation -1 Introduction statements -2 Introduction functions -3 Naming things -4 Introduction loops information go GitHub page; https://github.com/SBOHVM/RPiR Please raise issue find problems; https://github.com/SBOHVM/RPiR/issues","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/RPiR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reproducible Programming in R course — RPiR-package","text":"Sonia Mitchell <sonia.mitchell@glasgow.ac.uk> (maintainer)  Richard Reeve <richard.reeve@glasgow.ac.uk>","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/RPiR-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reproducible Programming in R course — RPiR-package","text":"","code":"if (FALSE) { # To run a tutorial RPiR::run_practical(\"practical1-1\") }"},{"path":"https://sbohvm.github.io/RPiR/reference/assert_no_globals.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that a function contains no global variables — assert_no_globals","title":"Assert that a function contains no global variables — assert_no_globals","text":"function stop code execution error function passed uses global variable.","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/assert_no_globals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that a function contains no global variables — assert_no_globals","text":"","code":"assert_no_globals(test_function, name = deparse1(substitute(test_function)))"},{"path":"https://sbohvm.github.io/RPiR/reference/assert_no_globals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that a function contains no global variables — assert_no_globals","text":"test_function function check global variables name (optional) name function string -- passed error message","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/assert_no_globals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert that a function contains no global variables — assert_no_globals","text":"nothing","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/assert_no_globals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assert that a function contains no global variables — assert_no_globals","text":"","code":"if (FALSE) { broken_function <- function() print(y) assert_no_globals(broken_function) assert_no_globals(broken_function, name = \"the_name_of_my_function\") }"},{"path":"https://sbohvm.github.io/RPiR/reference/available_lectures.html","id":null,"dir":"Reference","previous_headings":"","what":"List currently available lectures — available_lectures","title":"List currently available lectures — available_lectures","text":"function lists currently available lectures.","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/available_lectures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List currently available lectures — available_lectures","text":"","code":"available_lectures()"},{"path":"https://sbohvm.github.io/RPiR/reference/available_lectures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List currently available lectures — available_lectures","text":"","code":"available_lectures() #> Available lectures: #> \"RPiR1-intro\" - Introduction #> \"RPiR2a-R\" - Reproducible Programming in R #> \"RPiR2b-modelling\" - Introduction to Modelling #> \"RPiR2c-development\" - Accelerated development #> \"RPiR3a-R\" - More Programming in R #> \"RPiR3b-git\" - GitHub and RStudio projects #> \"RPiR5a-reporting\" - Writing Reports #> \"RPiR5b-modelling\" - Building Epidemiological Models #> \"RPiR5c-R\" - (Yet more) Programming #> \"RPiR7a-R\" - More Programming in R #> \"RPiR8a-packages\" - Writing packages in R #> \"RPiR8c-R\" - More Programming in R #> \"RPiR11a-data\" - Data Management #> \"RPiR12a-programming\" - Programming #> \"RPiR13a-diversity\" - Calculating Diversity"},{"path":"https://sbohvm.github.io/RPiR/reference/available_practicals.html","id":null,"dir":"Reference","previous_headings":"","what":"List currently available practicals — available_practicals","title":"List currently available practicals — available_practicals","text":"function lists currently available lectures.","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/available_practicals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List currently available practicals — available_practicals","text":"","code":"available_practicals(verbose = FALSE)"},{"path":"https://sbohvm.github.io/RPiR/reference/available_practicals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List currently available practicals — available_practicals","text":"verbose Add description text TRUE (default FALSE)","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/available_practicals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List currently available practicals — available_practicals","text":"","code":"available_lectures() #> Available lectures: #> \"RPiR1-intro\" - Introduction #> \"RPiR2a-R\" - Reproducible Programming in R #> \"RPiR2b-modelling\" - Introduction to Modelling #> \"RPiR2c-development\" - Accelerated development #> \"RPiR3a-R\" - More Programming in R #> \"RPiR3b-git\" - GitHub and RStudio projects #> \"RPiR5a-reporting\" - Writing Reports #> \"RPiR5b-modelling\" - Building Epidemiological Models #> \"RPiR5c-R\" - (Yet more) Programming #> \"RPiR7a-R\" - More Programming in R #> \"RPiR8a-packages\" - Writing packages in R #> \"RPiR8c-R\" - More Programming in R #> \"RPiR11a-data\" - Data Management #> \"RPiR12a-programming\" - Programming #> \"RPiR13a-diversity\" - Calculating Diversity"},{"path":"https://sbohvm.github.io/RPiR/reference/clean_cached_exercises.html","id":null,"dir":"Reference","previous_headings":"","what":"clean_cached_exercises — clean_cached_exercises","title":"clean_cached_exercises — clean_cached_exercises","text":"clean_cached_exercises","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/clean_cached_exercises.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clean_cached_exercises — clean_cached_exercises","text":"","code":"clean_cached_exercises()"},{"path":"https://sbohvm.github.io/RPiR/reference/cleanup_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleaning up data — cleanup_times","title":"Cleaning up data — cleanup_times","text":"Cleanup times population data frame, regularly spaced stop correct time, using either means interpolate new data points previous value events. assume data frame stops end.time state remaining unchanged.","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/cleanup_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleaning up data — cleanup_times","text":"","code":"cleanup_times(   populations,   are.events,   timestep = 1,   end.time = max(populations$time),   times = seq(from = min(populations$time), to = end.time, by = timestep) )  cleanup_events(populations, ...)  cleanup_timesteps(populations, ...)"},{"path":"https://sbohvm.github.io/RPiR/reference/cleanup_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cleaning up data — cleanup_times","text":"populations - data frame columns corresponding different population segments 'time' column .events - whether times data frame events (therefore take last event determine state) (therefore interpolate) timestep - (optionally) timestep required times - default 1 end.time - (optionally) end simulation time required - default max(populations$time) times - (optionally) vector times reproduced - default seq(=min(populations$time), =end.time, =timestep) ... - pass arguments cleanup_events() cleanup_timesteps() cleanup_times()","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/cleanup_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cleaning up data — cleanup_times","text":"Revised data frame correct timings","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/cleanup_times.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cleaning up data — cleanup_times","text":"cleanup_events() cleans times event-based population data frame, cleanup_timesteps() cleans times timestep-based population data frame.","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/cleanup_times.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cleaning up data — cleanup_times","text":"","code":"growth <- function(latest.df, growth.rate) { current.count <- latest.df$count growth.num <- current.count * growth.rate next.count <- current.count + growth.num next.time <- latest.df$time + 1 new.df <- data.frame(time=next.time, count=next.count) finished <- next.count == 0 list(updated.pop=new.df, end.experiment=finished) } df <- data.frame(time=0, count=1) results <- run_simulation(growth, df, 100, growth.rate=0.1) plot_populations(results) short.results <- cleanup_timesteps(results, timestep=20, end.time=80) plot_populations(short.results, new.graph=FALSE, lty=2)"},{"path":"https://sbohvm.github.io/RPiR/reference/dummy_package.html","id":null,"dir":"Reference","previous_headings":"","what":"dummy_package — dummy_package","title":"dummy_package — dummy_package","text":"function create RStudio project populate `0105-run-birth-death.R` (now `run-birth-death.R`), `0105-step-birth-death.R` (now `step_deterministic_birth_death.R`).","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/dummy_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dummy_package — dummy_package","text":"","code":"dummy_package(package_name)"},{"path":"https://sbohvm.github.io/RPiR/reference/dummy_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dummy_package — dummy_package","text":"package_name string corresponding name want give package; GitHub user name.","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/dummy_project.html","id":null,"dir":"Reference","previous_headings":"","what":"dummy_project — dummy_project","title":"dummy_project — dummy_project","text":"function create RStudio project populate scripts practical series 1.","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/dummy_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dummy_project — dummy_project","text":"","code":"dummy_project(project_name)"},{"path":"https://sbohvm.github.io/RPiR/reference/dummy_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dummy_project — dummy_project","text":"project_name string corresponding name want give project; GitHub user name, followed practical number, *e.g.* maryjane_0106","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/export_materials.html","id":null,"dir":"Reference","previous_headings":"","what":"export_materials — export_materials","title":"export_materials — export_materials","text":"export_materials","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/export_materials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"export_materials — export_materials","text":"","code":"export_materials(materials, type = \"exercises\")"},{"path":"https://sbohvm.github.io/RPiR/reference/export_materials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"export_materials — export_materials","text":"materials materials type content type","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/extract_chunks.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_chunks — extract_chunks","title":"extract_chunks — extract_chunks","text":"Extract code chunks .Rmd file","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/extract_chunks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_chunks — extract_chunks","text":"","code":"extract_chunks(filename)"},{"path":"https://sbohvm.github.io/RPiR/reference/extract_chunks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_chunks — extract_chunks","text":"filename filename","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/plot_populations.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot population(s) against time — plot_populations","title":"Plot population(s) against time — plot_populations","text":"Plot populations data frame time. One column must called \"time\" used x-axis plot. rest used different lines y-axis, legend denoting column names.","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/plot_populations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot population(s) against time — plot_populations","text":"","code":"plot_populations(   populations,   new.graph = TRUE,   ylim = NA,   lty = 1,   col = NA,   with.legend = TRUE,   ... )"},{"path":"https://sbohvm.github.io/RPiR/reference/plot_populations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot population(s) against time — plot_populations","text":"populations Data frame columns corresponding different population segments 'time' column new.graph (optionally) whether start new graph, default TRUE ylim (optionally, new graphs) limits y axis, default min max pop size lty (optionally) line type graph, default 1 col (optionally) colour lines, default 1:num.populations can name c(susceptibles = \"green\", ...) .legend (optionally) whether include legend (TRUE FALSE), default TRUE ... (optionally) arguments plot lines accept","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/plot_populations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot population(s) against time — plot_populations","text":"","code":"df <- data.frame(time = 0:100, grow = exp((0:100) / 10),                  die = exp(seq(10, 0, by = -0.1))) plot_populations(df, lty = 2, main = \"A title\")"},{"path":"https://sbohvm.github.io/RPiR/reference/plot_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplest code to plot population(s) against time — plot_simple","title":"Simplest code to plot population(s) against time — plot_simple","text":"simple plot populations data frame time. One column must called \"time\" used x-axis plot. rest used different lines y-axis, legend denoting column names. See plot_populations() sophisticated plotting function.","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/plot_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplest code to plot population(s) against time — plot_simple","text":"","code":"plot_simple(   populations,   new.graph = TRUE,   xlim,   ylim,   lty = 1,   legend = \"topright\" )"},{"path":"https://sbohvm.github.io/RPiR/reference/plot_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplest code to plot population(s) against time — plot_simple","text":"populations Data frame columns corresponding different population segments 'time' column new.graph (optional) whether start new graph, default TRUE xlim (optional, new graphs) limits x axis, default min max time ylim (optional, new graphs) limits y axis, default min max pop size lty (optional) line type lines graph, default 1 legend (optional) legend position; choose \"topleft\", \"top\", \"topright\" (default), \"left\", \"center\", \"right\", \"bottomleft\", \"bottom\", \"bottomright\"","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/plot_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplest code to plot population(s) against time — plot_simple","text":"","code":"df <- data.frame(time = 0:100, grow = exp((0:100) / 10),                  die = exp(seq(10, 0, by = -0.1))) plot_simple(df, lty = c(2, 3))"},{"path":"https://sbohvm.github.io/RPiR/reference/populate_package.html","id":null,"dir":"Reference","previous_headings":"","what":"populate_package — populate_package","title":"populate_package — populate_package","text":"function create RStudio project populate `0105-run-birth-death.R`, `0105-step-birth-death.R`.","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/populate_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"populate_package — populate_package","text":"","code":"populate_package(force = FALSE)"},{"path":"https://sbohvm.github.io/RPiR/reference/populate_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"populate_package — populate_package","text":"force - overwrite existing files TRUE (default FALSE)","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/practical_series_one.html","id":null,"dir":"Reference","previous_headings":"","what":"practical_series_one — practical_series_one","title":"practical_series_one — practical_series_one","text":"function populate current working directory scripts functions practical series 1.","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/practical_series_one.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"practical_series_one — practical_series_one","text":"","code":"practical_series_one(force = FALSE)"},{"path":"https://sbohvm.github.io/RPiR/reference/practical_series_one.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"practical_series_one — practical_series_one","text":"force - overwrite existing files TRUE (default FALSE)","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/run_integration.html","id":null,"dir":"Reference","previous_headings":"","what":"Run an integration over time — run_integration","title":"Run an integration over time — run_integration","text":"generic function integrate series ODEs. Designed arguments compatible run_xxx() functions, rather optimally designed ode(). deriv_function must three arguments (t, pop_vec, param_vec), t time, pop_vec contains current state population vector named elements, param_vec contains vector named parameters. must return list two elements, first vector derivatives population pop_vec, second empty vector.","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/run_integration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run an integration over time — run_integration","text":"","code":"run_integration(   deriv_function,   populations,   end.time,   timestep = 1,   debug = FALSE,   ... )"},{"path":"https://sbohvm.github.io/RPiR/reference/run_integration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run an integration over time — run_integration","text":"deriv_function Function calculate derivative populations Data frame columns corresponding function requirements end.time End time simulation timestep (optionally) record state every timestep - default 1 debug (optionally) want print limited amount debugging information code? - default FALSE ... arguments deriv_function, mostly parameters","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/run_integration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run an integration over time — run_integration","text":"Data frame containing population history simulation time","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/run_lecture.html","id":null,"dir":"Reference","previous_headings":"","what":"Run lecture — run_lecture","title":"Run lecture — run_lecture","text":"function runs lecture RPiR course.","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/run_lecture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run lecture — run_lecture","text":"","code":"run_lecture(name)"},{"path":"https://sbohvm.github.io/RPiR/reference/run_lecture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run lecture — run_lecture","text":"name Name lecture","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/run_lecture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run lecture — run_lecture","text":"","code":"if (FALSE) { run_lecture(\"RPiR1-intro\") }"},{"path":"https://sbohvm.github.io/RPiR/reference/run_practical.html","id":null,"dir":"Reference","previous_headings":"","what":"Run practical — run_practical","title":"Run practical — run_practical","text":"function runs lecture RPiR course.","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/run_practical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run practical — run_practical","text":"","code":"run_practical(name)"},{"path":"https://sbohvm.github.io/RPiR/reference/run_practical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run practical — run_practical","text":"name Name practical","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/run_practical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run practical — run_practical","text":"","code":"if (FALSE) { run_practical(\"practical1-1\") }"},{"path":"https://sbohvm.github.io/RPiR/reference/run_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplest code to run a simulation loop — run_simple","title":"Simplest code to run a simulation loop — run_simple","text":"generic function run simulation loop fixed period time. run_simple() call step_function(initial.pop, ...) time ends step_function() reports experiment ended.","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/run_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplest code to run a simulation loop — run_simple","text":"","code":"run_simple(step_function, initial.pop, end.time, ...)"},{"path":"https://sbohvm.github.io/RPiR/reference/run_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplest code to run a simulation loop — run_simple","text":"step_function Function run timestep (step_function()) returns list containing elements updated.pop updated population end.experiment TRUE experiment ended (FALSE ) initial.pop Initial population data frame columns corresponding function requirements. *must* include time column run_simple() can check whether end.time reached. end.time End time simulation ... (optionally) arguments step_function(), e.g. parameters timestep","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/run_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplest code to run a simulation loop — run_simple","text":"Data frame containing population history simulation time","code":""},{"path":[]},{"path":"https://sbohvm.github.io/RPiR/reference/run_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplest code to run a simulation loop — run_simple","text":"","code":"growth <- function(latest.df, growth.rate) { current.count <- latest.df$count growth.num <- current.count * growth.rate next.count <- current.count + growth.num next.time <- latest.df$time + 1 new.df <- data.frame(time=next.time, count=next.count) finished <- next.count == 0 list(updated.pop=new.df, end.experiment=finished) } df <- data.frame(time=0, count=1) results <- run_simple(growth, df, 100, growth.rate = 0.1) plot_populations(results)"},{"path":"https://sbohvm.github.io/RPiR/reference/run_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a simulation loop — run_simulation","title":"Run a simulation loop — run_simulation","text":"generic function run simulation loop fixed period time. function can cope model step functions return updated data frame, functions return list end.experiment element updated.pop element. simulation working can set debug = TRUE arguments, print (potentially) useful debugging information runs. also check whether function global variables.","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/run_simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a simulation loop — run_simulation","text":"","code":"run_simulation(step_function, initial.pop, end.time, debug = FALSE, ...)"},{"path":"https://sbohvm.github.io/RPiR/reference/run_simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a simulation loop — run_simulation","text":"step_function Function run timestep (step_function()) returns list containing elements updated.pop updated population end.experiment TRUE experiment ended (FALSE ), just returns data frame updated population initial.pop Initial population data frame columns corresponding function requirements. *must* include time column run_simple() can check whether end.time reached. end.time End time simulation debug (optionally) want print limited amount debugging information code? - default FALSE ... (optionally) arguments step_function(), e.g. parameters timestep","code":""},{"path":"https://sbohvm.github.io/RPiR/reference/run_simulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a simulation loop — run_simulation","text":"Data frame containing population history simulation time","code":""},{"path":[]},{"path":"https://sbohvm.github.io/RPiR/reference/run_simulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a simulation loop — run_simulation","text":"","code":"growth <- function(latest.df, growth.rate) { current.count <- latest.df$count growth.num <- current.count * growth.rate next.count <- current.count + growth.num next.time <- latest.df$time + 1 new.df <- data.frame(time=next.time, count=next.count) finished <- next.count == 0 list(updated.pop=new.df, end.experiment=finished) } df <- data.frame(time=0, count=1) results <- run_simulation(growth, df, 100, growth.rate=0.1, debug=TRUE) #> Population names being used:  time, count  #> Parameter names being used:  growth.rate  #> step_function() returns a list. #> end.experiment returned from first run:  FALSE  #> Population returned from first run:  1, 1.1  plot_populations(results)"}]
