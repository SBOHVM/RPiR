# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - 'main'
  pull_request:

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: macOS-latest, r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            rcmdcheck
            rmarkdown
            readr
            yaml

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

# Build and deploy DOCS -----------------------------------------------------

      - name: Build Docs
        if: runner.os == 'ubuntu'
        run: |
          options(repos = c(CRAN = "https://cloud.r-project.org"))
          install.packages("rsconnect")
          install.packages("pkgdown")
          pkgdown::build_site()
        shell: Rscript {0}

      - name: Test whether navbar entries are real
        if: runner.os == 'ubuntu'
        run: Rscript inst/scripts/test_navbar.R

      - name: Move ioslide lectures to docs
        if: runner.os == 'ubuntu'
        run: |
          devtools::install()
          all_files <- dir(file.path("inst", "lectures"), recursive = TRUE,
                           full.names = TRUE)
          rmd_files <- all_files[grep(".Rmd", all_files)]
          pdf_files <- all_files[grep(".pdf", all_files)]
          if (!file.exists(file.path("docs", "lectures")))
            dir.create(file.path("docs", "lectures"), recursive = TRUE)

          for (file in rmd_files) {
            rmarkdown::render(file, output_dir = file.path("docs", "lectures"),
            # Set the parent environment to be on the top of the search path,
            # so that all attached methods can be found
                              envir = new.env(parent = globalenv()), clean = TRUE)
          }
          for (file in pdf_files) {
            file.copy(file, file.path("docs", "lectures"))
          }
        shell: Rscript {0}

      - name: Move ioslide (html) lectures to docs
        if: runner.os == 'ubuntu'
        run: |
          # Find files
          all_files <- dir(file.path("inst", "lectures"), recursive = TRUE, full.names = TRUE)
          rmd_files <- all_files[grep(".Rmd", all_files)]
          # Create directory
          if (!file.exists(file.path("docs", "lectures_html")))
          dir.create(file.path("docs", "lectures_html"), recursive = TRUE)

          for (file in rmd_files) {
            # Remove <b> tags
           # rmd_file <- readr::read_lines(file)
           # rmd_file <- rmd_file[-which(grepl("### <b>", rmd_file))]
           # rmd_file <- rmd_file[-which(grepl("### </b>", rmd_file))]
           # readr::write_lines(rmd_file, file)
            # Write html file
            rmarkdown::render(file,
              output_format = "html_document",
              output_dir = file.path("docs", "lectures_html"), clean = TRUE)
          }
        shell: Rscript {0}

      - name: Move learnr tutorials to docs
        if: runner.os == 'ubuntu'
        run: |
          if (!file.exists("docs")) dir.create("docs")

          # Copy entire tutorial directory
          file.copy(file.path("inst", "tutorials"),
          file.path("docs"), recursive = TRUE)

          # Find Rmd files
          all_files <- dir(file.path("docs", "tutorials"), recursive = TRUE,
          full.names = TRUE)
          rmd_files <- all_files[grepl(".Rmd", all_files)]

          # Convert files to html
          for (i in seq_len(length(rmd_files)))
          rmarkdown::render(rmd_files[i], "html_document")
        shell: Rscript {0}

      - name: Create a build_docs branch and commit to it
        if: runner.os == 'ubuntu'
        run: |
          git checkout -b build_docs
          git add .
          git commit -m 'build docs'
        shell: bash

      - name: Deploy Docs
        if: runner.os == 'ubuntu'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_BRANCH: build_docs
          BRANCH: gh-pages
          FOLDER: docs
          COMMIT_MESSAGE: 'build docs'
